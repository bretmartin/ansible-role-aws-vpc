---

- name: set VPC security group URL fact
  set_fact:
    _aws_vpc_sg_url: >-
      https://console.aws.amazon.com/ec2/v2/home?region={{ aws_region
        }}#SecurityGroups

- name: set configured security groups fact
  set_fact:
    _aws_vpc_configured_sgs: >
      {{ aws_vpc_security_groups_common | default({})
         | combine(aws_vpc_security_groups | default({}))
         | default({}) }}

- name: get existing security groups
  ec2_group_facts:
    filters:
      vpc-id: '{{ _aws_vpc_id }}'
    profile: '{{ aws_profile }}'
  register: _aws_vpc_existing_sgs

- name: set existing security groups fact
  set_fact:
    _aws_vpc_existing_sgs: >
      {{
        _aws_vpc_existing_sgs.security_groups
        | json_query("[*].group_name")
      }}

- name: set new and untracked security groups facts
  set_fact:
    _aws_vpc_new_sgs: >
      {{ _aws_vpc_configured_sgs | difference(_aws_vpc_existing_sgs) | sort }}
    _aws_vpc_untracked_sgs: >
      {{ _aws_vpc_existing_sgs | difference(_aws_vpc_configured_sgs) | sort }}

- name: configure security groups
  ec2_group:
    description: >-
      {{ _aws_vpc_configured_sgs[item]["description"] | default(None) }}
    name: '{{ item }}'
    profile: '{{ aws_profile }}'
    region: '{{ aws_region }}'
    rules: >-
      {{ _aws_vpc_configured_sgs[item]["rules"] | default(None) }}
    rules_egress: >-
      {{ _aws_vpc_configured_sgs[item]["rules_egress"] | default(None) }}
    vpc_id: '{{ _aws_vpc_id }}'
  with_items: '{{ _aws_vpc_configured_sgs }}'
  register: _aws_vpc_sgs_results

- name: set modified security groups fact
  set_fact:
    _aws_vpc_modified_sgs: >
      {{ _aws_vpc_sgs_results.results
         | selectattr("changed") | map(attribute="item") | list
         | difference(_aws_vpc_new_sgs) | sort }}

- name: call optional notifier for newly-created security groups
  include_tasks: 'roles/{{ notifier_role }}/tasks/main.yml'
  vars:
    message: >
      created new security
      group{%if _aws_vpc_new_sgs.__len__() != 1 %}s{% endif %}
      {% for sg in _aws_vpc_new_sgs -%}
      <a href="{{ _aws_vpc_sg_url }}:groupName={{ sg }}">{{ sg }}</a>
      {%- if not loop.last %}, {% endif -%}
      {% endfor %}
      in <a href="{{ _aws_vpc_url }}">VPC {{ aws_vpc_name }}</a>
  when: >
    notifier_role is defined and
    _aws_vpc_new_sgs

- name: call optional notifier for modified security groups
  include_tasks: 'roles/{{ notifier_role }}/tasks/main.yml'
  vars:
    message: >
      modified security
      group{%if _aws_vpc_modified_sgs.__len__() != 1 %}s{% endif %}
      {% for sg in _aws_vpc_modified_sgs -%}
      <a href="{{ _aws_vpc_sg_url }}:groupName={{ sg }}">{{ sg }}</a>
      {%- if not loop.last %}, {% endif -%}
      {% endfor %}
      in <a href="{{ _aws_vpc_url }}">VPC {{ aws_vpc_name }}</a>
  when: >
    notifier_role is defined and
    _aws_vpc_modified_sgs

- name: call optional notifier for untracked security groups
  include_tasks: 'roles/{{ notifier_role }}/tasks/main.yml'
  vars:
    message:
    attachments:
    - color: warning
      mrkdwn_in: ['text']
      text: >
        *WARNING:* security
        group{%if _aws_vpc_untracked_sgs.__len__() != 1 %}s{% endif %}
        {% for sg in _aws_vpc_untracked_sgs -%}
        <a href="{{ _aws_vpc_sg_url }}:groupName={{ sg }}">{{ sg }}</a>
        {%- if not loop.last %}, {% endif -%}
        {% endfor %}
        exist{%if _aws_vpc_untracked_sgs.__len__() == 1 %}s{% endif %}
        in <a href="{{ _aws_vpc_url }}">VPC {{ aws_vpc_name }}</a>
        <br/>but
        {% if _aws_vpc_untracked_sgs.__len__() == 1 %}is{% else %}are{% endif %}
        not configured by Ansible
  when: >
    notifier_role is defined and
    _aws_vpc_untracked_sgs
